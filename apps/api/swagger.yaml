openapi: 3.0.0
info:
  title: "OneHub v2 Internal API"
  version: "1.0.0"
  description: "The internal API for OneHub v2, used by the frontend to communicate with backend services via the API Gateway."

servers:
  - url: "https://api.onehub.v2/v1"
    description: "Staging Server"

paths:
  /auth/login:
    post:
      summary: "User Login"
      tags:
        - "Auth"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: "Login successful"
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: "JWT authentication token."
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /auth/me:
    get:
      summary: "Get Current User"
      tags:
        - "Auth"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: "Successful response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: "Unauthorized"

  /nlu/process:
    post:
      summary: "Process a natural language query"
      tags:
        - "NLU"
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NluRequest"
      responses:
        "200":
          description: "Query processed successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NluResponse"
        "400":
          description: "Bad Request"

  /dashboards:
    post:
      summary: "Provision a new dashboard"
      tags:
        - "DashboardGenerator"
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DashboardRequest"
      responses:
        "202":
          description: "Dashboard provisioning started"
        "400":
          description: "Bad Request"

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        name:
          type: string

    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    NluRequest:
      type: object
      required:
        - text
      properties:
        text:
          type: string
          description: "The user's spoken or typed query."

    NluResponse:
      type: object
      properties:
        intent:
          type: string
          description: "The detected intent (e.g., 'find_leads')."
        entities:
          type: array
          items:
            type: object
            properties:
              entity:
                type: string
              value:
                type: string

    DashboardRequest:
      type: object
      required:
        - userId
        - dashboardType
      properties:
        userId:
          type: string
          format: uuid
        dashboardType:
          type: string
          enum: ["BUSINESS_HEALTH", "MARKETING", "SALES"]
          description: "The type of dashboard to provision."

    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
